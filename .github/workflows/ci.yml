name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
    types: [opened, synchronize]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-22.04]
        otp: [26.x]
        elixir: [1.15.x]

    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    steps:
      - name: ‚òÅÔ∏è Checkout repository
        uses: actions/checkout@v3

      - name: üíß Setup Elixir ${{ matrix.elixir }} (OTP ${{matrix.otp}})
        uses: marmelasoft/elixir-setup@main
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}
          build-flags: --all-warnings --warnings-as-errors
        env:
          MIX_ENV: test

      - name: üî¨ Run the tests
        run: mix test --warnings-as-errors
        env:
          MIX_ENV: test

      # # Cache key based on Erlang/Elixir version and the mix.lock hash
      # - name: Restore PLT cache
      #   id: plt_cache
      #   uses: actions/cache/restore@v3
      #   with:
      #     key: |
      #       plt-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
      #     restore-keys: |
      #       plt-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-
      #     path: |
      #       priv/plts

      # # Create PLTs if no cache was found
      # - name: Create PLTs
      #   if: steps.plt_cache.outputs.cache-hit != 'true'
      #   run: mix dialyzer --plt

      # # By default, the GitHub Cache action will only save the cache if all steps in the job succeed,
      # # so we separate the cache restore and save steps in case running dialyzer fails.
      # - name: Save PLT cache
      #   id: plt_cache_save
      #   uses: actions/cache/save@v3
      #   if: steps.plt_cache.outputs.cache-hit != 'true'
      #   with:
      #     key: |
      #       plt-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
      #     path: |
      #       priv/plts

      # - name: üîç Analyze the code
      #   run: mix dialyzer --format github

      # - name: üßπ Check code formating
      #   run: mix format --check-formatted
      #   if: always()

      # - name: üí° Lint the code
      #   run: mix credo --strict --all
      #   if: always()
